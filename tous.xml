<krpano version="1.19" title="Virtual Tour">

	<include url="skin/vtourskin.xml" />

	<style name="arrowspot1" url="arrow.png" distorted="true" />
		<style name="flyoutimage"
	       distorted="true"
	       flying="0.0"
	       backup_state=""
	       backup_zorder=""
	       flying_state="in"
	       capture="false"
	       onclick="flyout_hotspot()"
	       />

	<!-- customize skin settings: maps, gyro, webvr, thumbnails, tooltips, layout, design, ... -->
	<skin_settings maps="false"
	               maps_type="google"
	               maps_bing_api_key=""
	               maps_google_api_key=""
	               maps_zoombuttons="false"
	               gyro="true"
	               webvr="true"
	               webvr_gyro_keeplookingdirection="false"
	               webvr_prev_next_hotspots="true"
	               littleplanetintro="true"
	               title="true"
	               thumbs="true"
	               thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"
	               thumbs_opened="false"
	               thumbs_text="false"
	               thumbs_dragging="true"
	               thumbs_onhoverscrolling="false"
	               thumbs_scrollbuttons="false"
	               thumbs_scrollindicator="false"
	               thumbs_loop="false"
	               tooltips_buttons="false"
	               tooltips_thumbs="false"
	               tooltips_hotspots="false"
	               tooltips_mapspots="false"
	               deeplinking="false"
	               loadscene_flags="MERGE"
	               loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"
	               loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"
	               loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"
	               loadingtext="loading..."
	               layout_width="100%"
	               layout_maxwidth="814"
	               controlbar_width="-24"
	               controlbar_height="40"
	               controlbar_offset="20"
	               controlbar_offset_closed="-40"
	               controlbar_overlap.no-fractionalscaling="10"
	               controlbar_overlap.fractionalscaling="0"
	               design_skin_images="vtourskin.png"
	               design_bgcolor="0x2D3E50"
	               design_bgalpha="0.8"
	               design_bgborder="0"
	               design_bgroundedge="1"
	               design_bgshadow="0 4 10 0x000000 0.3"
	               design_thumbborder_bgborder="3 0xFFFFFF 1.0"
	               design_thumbborder_padding="2"
	               design_thumbborder_bgroundedge="0"
	               design_text_css="color:#FFFFFF; font-family:Arial;"
	               design_text_shadow="1"
	               />

	<!--
	    For an alternative skin design either change the <skin_settings> values 
	    from above or optionally include one of the predefined designs from below.
	-->
	<!-- <include url="skin/vtourskin_design_flat_light.xml"  /> -->
	<!-- <include url="skin/vtourskin_design_glass.xml"       /> -->
	<!-- <include url="skin/vtourskin_design_ultra_light.xml" /> -->
	<!-- <include url="skin/vtourskin_design_117.xml"         /> -->
	<!-- <include url="skin/vtourskin_design_117round.xml"    /> -->
	<!-- <include url="skin/vtourskin_design_black.xml"       /> -->
	<!-- 相册功能 -->
<action name="flyout_hotspot">
		for(set(i,0), i LT hotspot.count, inc(i),
			copy(hs, hotspot[get(i)]);
			if(hs.name != name AND hs.style == 'flyoutimage' AND (hs.flying_state == 'out' OR hs.flying_state == 'flyingout'),
				callwith(hs, flyout_hotspot() );
			  );
		  );

		if(flying_state == 'flyingout',
			set(flying_state, 'flyingin');
		  ,
			if(flying_state == 'flyingin',
				set(flying_state, 'flyingout');
		  	  );
		  );

		if(flying_state == 'in',
			calc(backup_state, '0.0|' + rx + '|' + ry + '|' + rz + '|' + scale);
			copy(backup_zorder, zorder);
			set(flying_state, 'flyingout');
		  );

		if(flying_state == 'out',
			set(flying_state, 'flyingin');
		  );

		if(flying_state == 'flyingout',
			set(zorder, 99);
			tween(flying|rx|ry|rz|scale, '1.0|0.0|0.0|0.0|1.0', 0.5, default, set(flying_state,'out'); set(capture,true); );
		  );

		if(flying_state == 'flyingin',
			sub(zorder,1);
			set(capture,false);
			tween(flying|rx|ry|rz|scale, get(backup_state), 0.5, default, set(flying_state,'in'); copy(zorder,backup_zorder); );
		  );
	</action>


	<!-- startup action - load the first scene -->
	<action name="startup" autorun="onstart">
		if(startscene === null OR !scene[get(startscene)], copy(startscene,scene[0].name); );
		loadscene(get(startscene), null, MERGE);
		if(startactions !== null, startactions() );
	</action>

	<action name="do_crop_animation">
		<!-- 为热点注册属性 -->
		registerattribute(xframes, calc((imagewidth / %1) BOR 0));
		registerattribute(yframes, calc((imageheight / %2) BOR 0));
		registerattribute(frames, calc(xframes * yframes));
		registerattribute(frame, 0);
	 
		set(crop, '0|0|%1|%2');
	 
		setinterval(calc('crop_anim_' + name), calc(1.0 / %3),
			if(loaded,
				inc(frame);
				if(frame GE frames, if(onlastframe !== null, onlastframe() ); set(frame,0); );
				mod(xpos, frame, xframes);
				div(ypos, frame, xframes);
				Math.floor(ypos);
				mul(xpos, %1);
				mul(ypos, %2);
				calc(crop, xpos + '|' + ypos + '|%1|%2');
			  ,
				clearinterval(calc('crop_anim_' + name));
			  );
		  );
	</action>
	<!-- 热点跳转 -->
		<action name="transition">
		<!-- move the hotspot to the destination position -->
		tween(hotspot[%1].alpha, 0.0, 0.25, default);
		tween(hotspot[%1].rotate, %4, 0.25, default);
		tween(hotspot[%1].ath,    %2, 0.25, default);
		tween(hotspot[%1].atv,    %3, 0.25, default, WAIT);

		<!-- look at the hotspot position -->
		looktohotspot(%1);

		set(plugin[loading].visible,true);

		<!-- load and blend to the new scene -->
		loadscene(%5, null, MERGE, BLEND(2));

		<!-- save the startup view position of the scene-->
		copy(startview_hlookat, view.hlookat);
		copy(startview_vlookat, view.vlookat);
		copy(startview_fov, view.fov);

		<!-- look at the given position and wait for blending -->
		lookat(%6, %7, %8);
		wait(LOAD);

		set(plugin[loading].visible,false);

		wait(BLEND);

		<!-- return to startup position -->
		oninterrupt(break);
		lookto(get(startview_hlookat), get(startview_vlookat), get(startview_fov), smooth(60,-60,180));

	</action>
	<action name="setup_hotspot">
        addHotspot(get(hotspotname));
        set(hotspot[get(hotspotname)].url, 'textfield.swf');
        set(hotspot[get(hotspotname)].ath, %1);
        set(hotspot[get(hotspotname)].atv, %2);
        set(hotspot[get(hotspotname)].ox, 0);
        set(hotspot[get(hotspotname)].oy, -40);
        set(hotspot[get(hotspotname)].html, %3);
        set(hotspot[get(hotspotname)].css, 'color:#FFFFFF; font-family:微软雅黑; font-size:10px; line-height:10px; text-align:center;padding: 5px 10px');
        set(hotspot[get(hotspotname)].backgroundcolor, '0x000000');
        set(hotspot[get(hotspotname)].backgroundalpha, '0.5');
        set(hotspot[get(hotspotname)].border, 'true');
        set(hotspot[get(hotspotname)].bordercolor, '0xFFFFFF');
        set(hotspot[get(hotspotname)].borderalpha, '1');
        set(hotspot[get(hotspotname)].borderwidth, '1');
        set(hotspot[get(hotspotname)].roundedge, '5');
        set(hotspot[get(hotspotname)].shadow, '2');
        set(hotspot[get(hotspotname)].shadowrange, '2');
        set(hotspot[get(hotspotname)].shadowangle, '45');
        set(hotspot[get(hotspotname)].shadowcolor, '0x000000');
        set(hotspot[get(hotspotname)].shadowrange, '0.5');
</action>


	<scene name="scene_puydesancy" title="puydesancy" onstart="" thumburl="panos/puydesancy.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/puydesancy.tiles/preview.jpg" />

		<image>
			<cube url="panos/puydesancy.tiles/pano_%s.jpg" />

			<cube url="panos/puydesancy.tiles/mobile/pano_%s.jpg" devices="mobile" />
		</image>
<!-- 		<hotspot name="scene_puydesancyh"   style="arrowspot1" ath="1" onloaded="do_crop_animation(64,64, 60);" atv="10"  scale="0.40" onclick="transition(scene_puydesancyh,     1.0,  0.0, 0, spot_eingang,     -86, 3, 45);" /> -->
	<hotspot name="scene_puydesancyh"   style="arrowspot1" ath="1" onloaded="do_crop_animation(64,64, 60);" atv="10"  scale="0.40" onclick="js(alertWindow());" />
		<!-- place your scene hotspots here -->

	</scene>
	<scene name="spot_eingang" title="aa" onstart="" thumburl="panos/aa.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/aa.tiles/preview.jpg" />

		<image>
			<cube url="panos/aa.tiles/pano_%s.jpg" />

			<cube url="panos/aa.tiles/mobile/pano_%s.jpg" devices="mobile" />
		</image>

		<!-- place your scene hotspots here -->
			<hotspot name="spot1" style="flyoutimage"
	         url="image1.jpg"
	         zorder="1"
	         ath="45"
	         atv="54"
	         scale="0.4"
	         rx="-22.5" ry="-26.25" rz="-50.1"
	         />

	<hotspot name="spot2" style="flyoutimage"
	         url="image2.jpg"
	         zorder="3"
	         ath="90"
	         atv="54"
	         scale="0.4"
	         rx="-22.5" ry="-26.25" rz="-50.1"
	         />

	<hotspot name="spot3" style="flyoutimage"
	         url="image3.jpg"
	         zorder="2"
	         ath="75"
	         atv="58"
	         scale="0.4"
	         rx="-22.5" ry="-26.25" rz="-50.1"
	         />

	</scene>




</krpano>
